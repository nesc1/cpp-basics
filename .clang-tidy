---
Checks: '-clang*,\
bugprone-assert-side-effect,\
bugprone-bool-pointer-implicit-conversion,\
bugprone-copy-constructor-init,\
bugprone-dangling-handle,\
bugprone-forward-declaration-namespace,\
bugprone-inaccurate-erase,\
bugprone-macro-parentheses,\
bugprone-macro-repeated-side-effects,\
bugprone-misplaced-operator-in-strlen-in-alloc,\
bugprone-move-forwarding-reference,\
bugprone-multiple-statement-macro,\
bugprone-parent-virtual-call,\
bugprone-sizeof-container,\
bugprone-sizeof-expression,\
bugprone-string-constructor,\
bugprone-string-integer-assignment,\
bugprone-string-literal-with-embedded-nul,\
bugprone-suspicious-enum-usage,\
bugprone-suspicious-memset-usage,\
bugprone-suspicious-missing-comma,\
bugprone-suspicious-semicolon,\
bugprone-suspicious-string-compare,\
bugprone-swapped-arguments,\
bugprone-terminating-continue,\
bugprone-throw-keyword-missing,\
bugprone-undefined-memory-manipulation,\
bugprone-undelegated-constructor,\
bugprone-unused-raii,\
bugprone-unused-return-value,\
bugprone-use-after-move,\
bugprone-virtual-near-miss,\
cppcoreguidelines-pro-type-cstyle-cast,\
cppcoreguidelines-interfaces-global-init,\
cppcoreguidelines-pro-type-member-init,\
cppcoreguidelines-pro-type-static-cast-downcast,\
cppcoreguidelines-pro-type-union-access,\
cppcoreguidelines-pro-type-vararg,\
cppcoreguidelines-slicing,\
google-default-arguments,\
google-runtime-operator,\
hicpp-avoid-goto,\
hicpp-exception-baseclass,\
hicpp-explicit-conversions,\
hicpp-signed-bitwise,\
misc-definitions-in-headers,\
misc-new-delete-overloads,\
misc-non-copyable-objects,\
misc-redundant-expression,\
misc-throw-by-value-catch-by-reference,\
misc-unconventional-assign-operator,\
readability-inconsistent-declaration-parameter-name,\
readability-implicit-bool-conversion,\
readability-misleading-indentation,\
readability-misplaced-array-index,\
readability-non-const-parameter,\
cert-dcl21-cpp,\
cert-dcl50-cpp,\
cert-dcl58-cpp,\
cert-err34-c,\
cert-err52-cpp,\
cert-err60-cpp,\
cert-flp30-c,\
cert-msc50-cpp,
bugprone-fold-init-type,\
bugprone-integer-division,\
bugprone-incorrect-roundings,\
bugprone-misplaced-widening-cast,\
cppcoreguidelines-narrowing-conversions,\
google-runtime-int
cppcoreguidelines-no-malloc,\
cppcoreguidelines-pro-bounds-pointer-arithmetic,\
cppcoreguidelines-pro-type-const-cast,\
cppcoreguidelines-pro-type-reinterpret-cast,\
google-global-names-in-headers,\
llvm-namespace-comment,\
google-readability-todo,\
hicpp-multiway-paths-covered,\
hicpp-no-assembler,\
modernize-use-override,\
misc-misplaced-const,\
misc-unused-alias-decls,\
misc-unused-using-decls,\
readability-delete-null-pointer,\
readability-function-size,\
readability-redundant-control-flow,\
readability-redundant-declaration,\
readability-redundant-function-ptr-dereference,\
readability-redundant-member-init,\
readability-redundant-smartptr-get,\
readability-redundant-string-cstr,\
readability-redundant-string-init,\
readability-simplify-boolean-expr,\
readability-simplify-subscript-exp,\
readability-static-accessed-through-instance,\
readability-static-definition-in-anonymous-namespace,\
readability-string-compare,\
readability-uniqueptr-delete-release\
performance*'
WarningsAsErrors: '1'
HeaderFilterRegex: ''
FormatStyle:     none
CheckOptions:
  - { key: readability-identifier-naming.GlobalConstantCase,     value: CamelCase  }
  - { key: readability-identifier-naming.GlobalVariablePrefix,   value: g_         }
  - { key: readability-identifier-naming.GlobalVariableCase  ,   value: camelBack  }
  - { key: readability-identifier-naming.StaticVariablePrefix,   value: s_         }
  - { key: readability-identifier-naming.StaticVariableCase  ,   value: camelBack  }
  - { key: readability-identifier-naming.MemberPrefix,           value: m_         }
  - { key: readability-identifier-naming.MemberCase  ,           value: camelBack  }
  - { key: readability-identifier-naming.NamespaceCase,          value: lower_case }
  - { key: readability-identifier-naming.ClassCase,              value: CamelCase  }
  - { key: readability-identifier-naming.StructCase,             value: CamelCase  }
  - { key: readability-identifier-naming.FunctionCase,           value: camelBack  }
  - { key: readability-identifier-naming.VariableCase,           value: aNy_CasE }
